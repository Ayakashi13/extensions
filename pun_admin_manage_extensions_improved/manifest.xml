<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE extension SYSTEM "ext-1.0.dtd">

<!--
/**
 * Allows administrator to work with several extensions in group
 *
 * @copyright Copyright (C) 2008 PunBB
 * @license http://www.gnu.org/licenses/gpl.html GPL version 2 or higher
 * @package pun_admin_manage_extensions_improved
 */
-->

<extension engine="1.0">
	<id>pun_admin_manage_extensions_improved</id>
	<title>Pun Admin Manage Extensions Improved</title>
	<version>1.3</version>
	<description>This extension allows to choose several extensions to enable/disable/uninstall them</description>
	<author>PunBB Development Team</author>

	<minversion>1.3</minversion>
	<maxtestedon>1.3.2</maxtestedon>
	
	<note type="install" timing="pre">If extension "pun_extension_reinstaller" was installed, it will be disabled.</note>

	<install>
		$query = array(
			'SELECT'	=>	'1',
			'FROM'		=>	'extensions',
			'WHERE'		=>	'id = \'pun_extension_reinstaller\' AND disabled = 0'
		);
		
		$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);
		if ($forum_db->num_rows($result))
		{
			
			$query = array(
				'UPDATE'	=> 'extensions',
				'SET'		=> 'disabled = 1',
				'WHERE'		=> 'id = \'pun_extension_reinstaller\''
			);
			
			$forum_db->query_build($query) or error(__FILE__, __LINE__);
			
			require_once FORUM_ROOT.'include/cache.php';
			generate_hooks_cache();
		}
	</install>
	<hooks>
		<hook id="aex_section_manage_pre_ext_actions"><![CDATA[

			if (file_exists($ext_info['path'].'/lang/'.$forum_user['language'].'/'.$ext_info['id'].'.php'))
				require $ext_info['path'].'/lang/'.$forum_user['language'].'/'.$ext_info['id'].'.php';
			else
				require $ext_info['path'].'/lang/English/'.$ext_info['id'].'.php';
			$forum_page['ext_actions'][] = '<span><a href="'.$base_url.'/admin/extensions.php?section=manage&amp;reinstall='.$id.'&amp;csrf_token='.generate_form_token('reinstall'.$id).'">'.$lang_pun_man_ext_improved['Reinstall'].'</a></span>';
			$forum_page['ext_actions'][] = '<span><a href="'.$base_url.'/admin/extensions.php?section=manage&amp;only_hoks&amp;reinstall='.$id.'&amp;csrf_token='.generate_form_token('reinstall'.$id).'">'.$lang_pun_man_ext_improved['Only hooks'].'</a></span>';
		]]></hook>
		<hook id="aex_new_action"><![CDATA[

if (isset($_GET['reinstall']))
{
	$id = preg_replace('/[^0-9a-z_]/', '', $_GET['reinstall']);
	
	//include language file
	if (file_exists($ext_info['path'].'/lang/'.$forum_user['language'].'/'.$ext_info['id'].'.php'))
		require $ext_info['path'].'/lang/'.$forum_user['language'].'/'.$ext_info['id'].'.php';
	else
		require $ext_info['path'].'/lang/English/'.$ext_info['id'].'.php';
		
	// We validate the CSRF token. If it's set in POST and we're at this point, the token is valid.
	// If it's in GET, we need to make sure it's valid.
	if (!isset($_POST['csrf_token']) && (!isset($_GET['csrf_token']) || $_GET['csrf_token'] !== generate_form_token('reinstall'.$id)))
		csrf_confirm_form();

	// Setup breadcrumbs
	$forum_page['crumbs'] = array(
		array($forum_config['o_board_title'], forum_link($forum_url['index'])),
		array($lang_admin_common['Forum administration'], forum_link($forum_url['admin_index'])),
		$lang_admin_common['Manage extensions']
	);

	if (isset($_POST['reinstall_cancel']))
	{
		$display_group_buttons = true;
		include $ext_info['path'].'/extension_list.php';
	}

	if (!isset($_POST['reinstall_continue']))
	{
		//Check for dependencies first
		$query = array(
			'SELECT'	=> 'e.id',
			'FROM'		=> 'extensions AS e',
			'WHERE'		=> 'e.disabled=0 AND e.dependencies LIKE \''.$forum_db->escape($id).'\''
		);

		$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);

		if ($forum_db->num_rows($result))
		{
			$dependency = $forum_db->fetch_assoc($result);
			$head_notice = sprintf($lang_pun_man_ext_improved['Reinstall ext'], $id);
			$important_message = sprintf($lang_pun_man_ext_improved['Reinstall with deps'], $dependency['id'], '"'.$id.'"');
			$form_radboxes = '';
			$type = 'reinstall';
			$handle = $base_url.'/admin/extensions.php?section=manage&amp;reinstall='.$id;	
		
			include  $ext_info['path'].'/continue.php';	
		}
	}

	// Fetch info about the extension
	$query = array(
		'SELECT'	=> 'e.title, e.version, e.description, e.author, e.uninstall, e.uninstall_note',
		'FROM'		=> 'extensions AS e',
		'WHERE'		=> 'e.id=\''.$forum_db->escape($id).'\''
	);

	($hook = get_hook('aex_qr_get_extension')) ? eval($hook) : null;

	$result = $forum_db->query_build($query) or error(__FILE__, __LINE__);
	if (!$forum_db->num_rows($result))
		message($lang_common['Bad request']);

	$old_ext_data = $forum_db->fetch_assoc($result);

	// Load manifest (either locally or from punbb.informer.com updates service)
	if (strpos($id, 'hotfix_') === 0)
		$manifest = @end(get_remote_file('http://punbb.informer.com/update/manifest/'.$id.'.xml', 16));
	else
		$manifest = @file_get_contents(FORUM_ROOT.'extensions/'.$id.'/manifest.xml');

	// Parse manifest.xml into an array and validate it
	$ext_data = xml_to_array($manifest);
	$errors = validate_manifest($ext_data, $id);

	//get dependence extensions and check this extension in getting array

	if (!isset($_POST['reinstall_continue']) && isset($_GET['only_hoks']) && version_compare($ext_data['extension']['version'], $old_ext_data['version'], '>'))
	{
		//Show continue page
		$important_message = sprintf($lang_pun_man_ext_improved['Update error'], $id);
		$head_notice = $lang_pun_man_ext_improved['Ext update'];
		$form_radboxes = '';
		$type = 'reinstall';
		$handle = $base_url.'/admin/extensions.php?section=manage&amp;multy&amp;only_hoks&amp;reinstall='.$id;

		include $ext_info['path'].'/continue.php';
	}
	if (!empty($errors))
		message(isset($_GET['install']) ? $lang_common['Bad request'] : $lang_admin_common['Hotfix download failed']);

	// Is there some uninstall code to store in the db?
	$uninstall_code = (isset($ext_data['extension']['uninstall']) && trim($ext_data['extension']['uninstall']) != '') ? '\''.$forum_db->escape(trim($ext_data['extension']['uninstall'])).'\'' : 'NULL';

	// Is there an uninstall note to store in the db?
	$uninstall_note = 'NULL';
	foreach ($ext_data['extension']['note'] as $cur_note)
	{
		if ($cur_note['attributes']['type'] == 'uninstall' && trim($cur_note['content']) != '')
			$uninstall_note = '\''.$forum_db->escape(trim($cur_note['content'])).'\'';
	}
	// Run uninstall + install only if all previous steps are OK

	
	// Run uninstall code
	if (!isset($_GET['only_hoks']))
		eval($old_ext_data['uninstall']);

	// Now delete the extension and its hooks from the db
	$query = array(
		'DELETE'	=> 'extension_hooks',
		'WHERE'		=> 'extension_id = \''.$forum_db->escape($id).'\''
	);
	
	($hook = get_hook('aex_qr_uninstall_delete_hooks')) ? eval($hook) : null;
	
	$forum_db->query_build($query) or error(__FILE__, __LINE__);

	$query = array(
		'DELETE'	=> 'extensions',
		'WHERE'	 => 'id = \''.$forum_db->escape($id).'\''
	);

	($hook = get_hook('aex_qr_delete_extension')) ? eval($hook) : null;

	$forum_db->query_build($query) or error(__FILE__, __LINE__);

	require_once $ext_info['path'].'/functions.php';

	regenerate_glob_vars();

	// Run the author supplied install code
	if (isset($ext_data['extension']['install']) && trim($ext_data['extension']['install']) != '' && !isset($_GET['only_hoks']))
		eval($ext_data['extension']['install']);

	// Make sure we have an array of dependencies
	if (!isset($ext_data['extension']['dependencies']))
		$ext_data['extension']['dependencies'] = array();
	else if (!is_array(current($ext_data['extension']['dependencies'])))
		$ext_data['extension']['dependencies'] = array($ext_data['extension']['dependencies']['dependency']);
	else
		$ext_data['extension']['dependencies'] = $ext_data['extension']['dependencies']['dependency'];

	// Add the new extension
	$query = array(
		'INSERT'	=> 'id, title, version, description, author, uninstall, uninstall_note, dependencies',
		'INTO'		=> 'extensions',
		'VALUES'	=> '\''.$forum_db->escape($ext_data['extension']['id']).'\', \''.$forum_db->escape($ext_data['extension']['title']).'\', \''.$forum_db->escape($ext_data['extension']['version']).'\', \''.$forum_db->escape($ext_data['extension']['description']).'\', \''.$forum_db->escape($ext_data['extension']['author']).'\', '.$uninstall_code.', '.$uninstall_note.', \'|'.implode('|', $ext_data['extension']['dependencies']).'|\'',
	);
	
	($hook = get_hook('aex_qr_add_ext')) ? eval($hook) : null;
	
	$forum_db->query_build($query) or error(__FILE__, __LINE__);

	// Now insert the hooks
	foreach ($ext_data['extension']['hooks']['hook'] as $ext_hook)
	{
		$cur_hooks = explode(',', $ext_hook['attributes']['id']);
		foreach ($cur_hooks as $cur_hook)
		{
			$query = array(
				'INSERT'	=> 'id, extension_id, code, installed, priority',
				'INTO'		=> 'extension_hooks',
				'VALUES'	=> '\''.$forum_db->escape(trim($cur_hook)).'\', \''.$forum_db->escape($id).'\', \''.$forum_db->escape(trim($ext_hook['content'])).'\', '.time().', '.(isset($ext_hook['attributes']['priority']) ? $ext_hook['attributes']['priority'] : 5)
			);
			
			($hook = get_hook('aex_qr_add_hook')) ? eval($hook) : null;
			
			$forum_db->query_build($query) or error(__FILE__, __LINE__);
		}
	}

	// Refresh system after install

	regenerate_glob_vars();

	// Regenerate the hooks cache
	require_once FORUM_ROOT.'include/cache.php';
	generate_config_cache();
	generate_hooks_cache();

	$display_group_buttons = true;

	include $ext_info['path'].'/extension_list.php';
}

$display_group_buttons = true;

if (isset($_GET['multy']) && (isset($_POST['disable_selected']) || isset($_POST['enable_selected']) || isset($_POST['uninstall_selected'])) && (!isset($_POST['extens']) || !is_array(array_keys($_POST['extens'])) || array_keys($_POST['extens']) == array()))
	$no_selected_extensions = true;
else if (isset($_GET['multy']))
{
	if (file_exists($ext_info['path'].'/lang/'.$forum_user['language'].'/'.$ext_info['id'].'.php'))
		require $ext_info['path'].'/lang/'.$forum_user['language'].'/'.$ext_info['id'].'.php';
	else
		require $ext_info['path'].'/lang/English/'.$ext_info['id'].'.php';

	if ( (isset($_GET['disable_sel']) || isset($_GET['enable_sel']) || isset($_GET['uninstall_sel'])) && (!isset($_POST['selected_extens']) || !is_scalar($_POST['selected_extens'])) )
		redirect(forum_link($forum_url['admin_extensions_manage']), $lang_pun_man_ext_improved['Input error'].' '.$lang_admin_common['Redirect']);

	if (!isset($_POST['csrf_token']))
		csrf_confirm_form();

	include $ext_info['path'].'/functions.php';
	//If press button Disable selected
	if (isset($_POST['disable_selected']))
	{
		//Validate selected extensions
		$sel_extens = validate_ext_list(array_keys($_POST['extens']));
		$dependencies_error = get_dependencies_error($sel_extens);

		//If dependened extension in selected list, we remove error
		if (!empty($dependencies_error))
		{
			foreach ($sel_extens as $ext)
				if (in_array($ext, array_keys($dependencies_error)))
					unset($dependencies_error[$ext]);
		}

		if (!empty($dependencies_error))
			$continue_page = true;
		else
			flip_extensions('1', $sel_extens);
	}
	//If press button Enable selected
	else if (isset($_POST['enable_selected']))
	{
		//Validate selected extensions
		$sel_extens = validate_ext_list( array_keys($_POST['extens']) );
		$dep_arr = get_only_dep($sel_extens);
		
		if (array_diff($dep_arr, $sel_extens) != array())
			$continue_page = true;
		else
			flip_extensions('0', $sel_extens );
	}
	//If press button Uninstall selected
	else if (isset($_POST['uninstall_selected']))
	{
		//Validate selected extensions
		$sel_extens = validate_ext_list( array_keys($_POST['extens']) );
		$dep_arr = get_only_dep($sel_extens);
		
		if (array_diff($dep_arr, $sel_extens) != array())
			$continue_page = true;
		else
		{
			uninstall_extensions($sel_extens);
			redirect(forum_link($forum_url['admin_extensions_manage']), $lang_pun_man_ext_improved['Uninstall selected'].' ');
		}
	}
	//Continue disable selected
	else if (isset($_GET['disable_sel']) && isset($_POST['disable_continue']))
	{
		if (!isset($_POST['disable_type']) || ($_POST['disable_type'] != 0 && $_POST['disable_type'] != 1))
			message($lang_common['Bad request']);
		$sel_extens = validate_ext_list(explode(',', $_POST['selected_extens']));

		if ($_POST['disable_type'] == 0)
			flip_extensions('1', $sel_extens);
		else
		{
			$dependencies_error = get_dependencies_error($sel_extens);
			flip_extensions('1', $sel_extens);
			if (!empty($dependencies_error))
			{
				$disable_dep_exts = array();
				foreach ($dependencies_error as $dep_ext => $main_exts)
				{
					if (!in_array($dep_ext, $sel_extens) && array_intersect($main_exts, $sel_extens) != array())
						$disable_dep_exts[] = $dep_ext;
				}
				flip_extensions('1', $disable_dep_exts);
			}
		}

		redirect(forum_link($forum_url['admin_extensions_manage']), $lang_pun_man_ext_improved['Disable selected'].' '.$lang_admin_common['Redirect']);
	}
	//Continue enable selected	
	else if (isset($_GET['enable_sel']) && isset($_POST['enable_continue']))
	{
		if (!isset($_POST['enable_type']) || ($_POST['enable_type'] != 0 && $_POST['enable_type'] != 1))
			message($lang_common['Bad request']);

		//Validate selected extensions
		$sel_extens = validate_ext_list(explode(',', $_POST['selected_extens']));

		if (!$_POST['enable_type'])
			flip_extensions('0', $sel_extens);
		else
		{
			$enable_list = get_dependencies_list_rev();
			
			$error_list = array();
			$dep_list = get_dependencies();
			$installed_extens = array_keys($dep_list);
			
			for ($ext_num = 0; $ext_num < count($sel_extens); $ext_num++)
				for ($i = 0; $i < count($dep_list[ $sel_extens[$ext_num] ]); $i++)
				{
					if (!in_array($dep_list[ $sel_extens[$ext_num] ][ $i ], $installed_extens))
					{
						if (!isset($error_list[ $sel_extens[$ext_num] ]))
							$error_list[ $sel_extens[$ext_num] ] = '';
						$error_list[ $sel_extens[$ext_num] ] .= $dep_list[ $sel_extens[$ext_num] ][ $i ].', ';
					}
				}

			if (empty($error_list))
				flip_extensions('0', $enable_list);
		}
		if (empty($error_list))
			redirect(forum_link($forum_url['admin_extensions_manage']), $lang_pun_man_ext_improved['Enable selected'].' '.$lang_admin_common['Redirect']);
	}
	//Continue uninstall selected
	else if (isset($_GET['uninstall_sel']) && isset($_POST['uninstall_continue']))
	{
		if (!isset($_POST['uninstall_type']) || !in_array($_POST['uninstall_type'], array(0, 1, 2)))
			message($lang_common['Bad request']);

		//Validate selected extensions
		$sel_extens = validate_ext_list(explode(',', $_POST['selected_extens']));

		if ($_POST['uninstall_type'] == 0)
			uninstall_extensions( $sel_extens );
		else if ($_POST['uninstall_type'] == 1)
		{
			//Validate selected extensions
			$sel_extens = validate_ext_list( explode(',', $_POST['selected_extens']) );
			$dis_list = get_only_dep($sel_extens);

			flip_extensions('1', $dis_list);

			uninstall_extensions( $sel_extens );
		}
		else if ($_POST['uninstall_type'] == 2)
			uninstall_extensions( get_dependencies_list() );
		redirect(forum_link($forum_url['admin_extensions_manage']), $lang_pun_man_ext_improved['Uninstall selected'].' '.$lang_admin_common['Redirect']);
	}
	if (isset($continue_page))
	{
		$display_group_buttons = false;	

		$important_message = $lang_pun_man_ext_improved['Dependency error'];
		if (isset($_POST['disable_selected']))
		{
			$head_notice = $lang_pun_man_ext_improved['Disable checked'];
			$form_radboxes = '<div class="mf-item"><span class="fld-input"><input type="radio" id="fld10" name="disable_type" value="0" /></span><label>'.$lang_pun_man_ext_improved['Ignore deps'].'</label></div>';
			$form_radboxes .= '<div class="mf-item"><span class="fld-input"><input type="radio" id="fld11" name="disable_type" value="1" checked="checked"/></span><label>'.$lang_pun_man_ext_improved['Disable deps extensions'].'</label></div>';
			if (!empty($dependencies_error))
			{
				$dependencies_error_message = '<h2 class="warn hn"><span>'.$lang_pun_man_ext_improved['Dep error message'].'</span></h2>';
				$dependencies_error_message .= '<ul class="error-list">';
				foreach ($dependencies_error as $dep => $main)
					$dependencies_error_message .= '<li class="warn"><span>'.sprintf($lang_pun_man_ext_improved['Work dependencies'], $dep, implode(', ', $main)).'</span></li>';
				$dependencies_error_message .= '</ul>';
				$dependencies_error_message = '<div class="ct-box error-box">'.$dependencies_error_message.'</div>';
			}
			$type = 'disable';
		}
		else if (isset($_POST['enable_selected']))
		{
			$head_notice = $lang_pun_man_ext_improved['Enable checked'];
			$form_radboxes = '<div class="mf-item"><span class="fld-input"><input type="radio" id="fld10" name="enable_type" value="0" /></span><label>'.$lang_pun_man_ext_improved['Ignore deps'].'</label></div>';
			$form_radboxes .= '<div class="mf-item"><span class="fld-input"><input type="radio" id="fld11" name="enable_type" value="1" checked="checked"/></span><label>'.$lang_pun_man_ext_improved['Enable main'].'</label></div>';
			$type = 'enable';
		}
		else if (isset($_POST['uninstall_selected']))
		{
			$head_notice = $lang_pun_man_ext_improved['Uninstall checked'];
			$form_radboxes = '<div class="mf-item"><span class="fld-input"><input type="radio" id="fld10" name="uninstall_type" value="0" /></span><label>'.$lang_pun_man_ext_improved['Ignore deps'].'</label></div>';
			$form_radboxes .= '<div class="mf-item"><span class="fld-input"><input type="radio" id="fld11" name="uninstall_type" value="1"/></span><label>'.$lang_pun_man_ext_improved['Disable deps extensions'].'</label></div>';
			$form_radboxes .= '<div class="mf-item"><span class="fld-input"><input type="radio" id="fld12" name="uninstall_type" value="2"/></span><label>'.$lang_pun_man_ext_improved['Uninstall all'].'</label></div>';
			$type = 'uninstall';
		}
		$form_radboxes = '<legend><span>'.$lang_pun_man_ext_improved['Choose action'].'</span></legend><div class="mf-box">'.$form_radboxes.'</div>';

		$handle = $base_url.'/admin/extensions.php?section=manage&amp;multy&amp;'.$type.'_sel';

		include $ext_info['path'].'/continue.php';
	}
}
if ($section == 'manage')
	include $ext_info['path'].'/extension_list.php';
		]]></hook>
		
		<hook id="co_common"><![CDATA[
$pun_extensions_used = array_merge(isset($pun_extensions_used) ? $pun_extensions_used : array(), array($ext_info['id']));
		]]></hook>
		<hook id="aex_section_manage_output_start"><![CDATA[
				
			$forum_page['fld_count'] = 0;
			if (isset($_POST['selected_extens']))
				$sel_extens = explode(',', $_POST['selected_extens']);
			else
				$sel_extens = array();
				
		]]></hook>
		<hook id="ft_about_end" priority="9"><![CDATA[
if (!defined('PUN_EXTENSIONS_USED') && !empty($pun_extensions_used))
{
	define('PUN_EXTENSIONS_USED', 1);
	if (count($pun_extensions_used) == 1)
		echo '<p style="clear: both; ">The '.$pun_extensions_used[0].' official extension is installed. Copyright &copy; 2003&ndash;2009 <a href="http://punbb.informer.com/">PunBB</a>.</p>';
	else
		echo '<p style="clear: both; ">Currently installed <span id="extensions-used" title="'.implode(', ', $pun_extensions_used).'.">'.count($pun_extensions_used).' official extensions</span>. Copyright &copy; 2003&ndash;2009 <a href="http://punbb.informer.com/">PunBB</a>.</p>';
}
		]]></hook>
	</hooks>
</extension>
